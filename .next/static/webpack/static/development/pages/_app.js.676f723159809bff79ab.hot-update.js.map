{"version":3,"file":"static/webpack/static/development/pages/_app.js.676f723159809bff79ab.hot-update.js","sources":["webpack:///./components/Header.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    Button,\n    Collapse,\n    Navbar,\n    NavbarToggler,\n    NavbarBrand,\n    Nav,\n    NavItem,\n    NavLink,\n    UncontrolledDropdown,\n    DropdownToggle,\n    DropdownMenu,\n    DropdownItem\n} from 'reactstrap';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport User from './User';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag'\nimport { CURRENT_USER_QUERY } from './User';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst SIGN_OUT_MUTATION = gql`\n    mutation SIGN_OUT_MUTATION {\n        signout {\n            message\n        }\n    }\n`;\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        }\n    }\n\n    _toggle = () => {\n        this.setState({ isOpen: !this.state.isOpen });\n    }\n\n    render() {\n        const { currentUser } = this.props;\n        return (\n            <div>\n                {!currentUser ? (\n                    <Navbar color=\"dark\" dark expand=\"md\">\n                        <NavbarBrand href=\"/\"> \n                            Compounding\n                            {/* <div className=\"comp-logo\"></div> */}\n                        </NavbarBrand>\n                        <NavbarToggler onClick={this.toggle} />\n                        <Collapse isOpen={this.state.isOpen} navbar>\n                            <Nav className=\"ml-auto\" navbar>\n                                <UncontrolledDropdown nav inNavbar>\n                                    <DropdownToggle nav caret>\n                                        Login\n                                        </DropdownToggle>\n                                    <DropdownMenu right>\n                                        <Link href=\"/login\">\n                                            <DropdownItem>\n                                            <a>Login</a> \n                                            </DropdownItem>\n                                        </Link>\n                                        <Link href=\"/signup\">\n                                            <DropdownItem>\n                                                <a>Register</a>\n                                            </DropdownItem>\n                                        </Link>\n                                    </DropdownMenu>\n                                </UncontrolledDropdown>\n                            </Nav>\n                        </Collapse>\n                    </Navbar>\n                ) : (\n                        <Navbar color=\"dark\" dark expand=\"md\">\n                            <NavbarBrand href=\"/\"> \n                                Compounding\n                                {/* <div className=\"comp-logo\" ></div> */}\n                            </NavbarBrand>\n                            <NavbarToggler onClick={this.toggle} />\n                            <Collapse isOpen={this.state.isOpen} navbar>\n                                <Nav className=\"ml-auto\" navbar>\n                                    <UncontrolledDropdown nav inNavbar>\n                                        <DropdownToggle nav>\n                                        <FontAwesomeIcon icon=\"user-circle\"></FontAwesomeIcon> \n                                    </DropdownToggle>\n                                        <DropdownMenu right>\n                                            <Link href=\"/post\">\n                                                <DropdownItem>\n                                                    <a>Articles</a>\n                                                </DropdownItem>\n                                            </Link>\n                                            <Link href=\"/profile\">\n                                                <DropdownItem>\n                                                    <a>Profile</a>\n                                                </DropdownItem>\n                                            </Link>\n                                            <Link href=\"/users\">\n                                                <DropdownItem>\n                                                    <a>Users</a>\n                                                </DropdownItem>\n                                            </Link>\n                                            <DropdownItem divider />\n                                                <Mutation\n                                                    mutation={SIGN_OUT_MUTATION}\n                                                    refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n                                                >\n                                                    {signout => {\n                                                        return (\n                                                            <DropdownItem onClick={async e => {\n                                                                await signout();\n                                                                Router.push('/');\n                                                            }}>\n                                                                <a>Logout</a>\n                                                            </DropdownItem>\n                                                        )\n                                                    }}\n                                                </Mutation>\n                                        </DropdownMenu>\n                                    </UncontrolledDropdown>\n                                </Nav>\n                            </Collapse>\n                        </Navbar>\n                    )}\n            </div>\n        );\n    }\n}\n\nexport default Header;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAQA;AAAA;AAAA;AACA;AACA;AARA;AACA;AADA;AAFA;AAKA;AACA;;;AAKA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAEA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAUA;;;;AAlGA;AACA;AAoGA;;;;A","sourceRoot":""}