{"version":3,"file":"static/webpack/static/development/pages/_app.js.f89815819f7b1f3bdade.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from 'next/app';\nimport 'react-quill/dist/quill.snow.css';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"../index.scss\"\nimport Page from '../components/Page';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\nimport User from \"../components/User\";\nimport Loader from '../components/Loader';\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faStroopwafel, faCheck, faUserCircle } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faStroopwafel, faCheck, faUserCircle)\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {};\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n    // this exposes the query to the user\n    pageProps.query = ctx.query;\n    return { pageProps };\n  }\n  render() {\n    const { Component, apollo, pageProps } = this.props;\n    \n    return (\n      <Container>\n        <ApolloProvider client={apollo}>\n        <User>\n            {({ data, error, loading }) => {\n                const me = data ? data.me : null;                \n                return(\n                  <Page currentUser={me} >\n                    <div className=\"page__wrapper\">\n                      <Component {...pageProps} />\n                    </div>\n                </Page>\n                )\n            }}\n        </User>\n  \n        </ApolloProvider>\n      </Container>\n    );\n  }\n}\n\nexport default withData(MyApp);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;AAUA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAMA;;;;;;;;;;;;AA/BA;AACA;AACA;AAAA;;;;;;AACA;AACA;;AADA;AACA;;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;AATA;AACA;AAkCA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}