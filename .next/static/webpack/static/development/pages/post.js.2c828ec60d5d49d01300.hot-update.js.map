{"version":3,"file":"static/webpack/static/development/pages/post.js.2c828ec60d5d49d01300.hot-update.js","sources":["webpack:///./components/CreatePost.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Badge, Button, CardBody, CardFooter, CardHeader, Col, Form, FormFeedback, FormGroup, Input, Label, Row, ListGroup, ListGroupItem } from \"reactstrap\";\nimport CompCard from '../components/common/card/Card';\nimport Loader from './Loader';\nimport Router from 'next/router';\nimport CURRENT_USER_QUERY from './User';\nimport { toast } from 'react-toastify';\nimport Error from './ErrorMessage'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nlet ReactQuill = null\n\nconst CREATE_POST_MUTATION = gql`\n    mutation CREATE_POST_MUTATION($description: String!, $title: String!, $types: String!) {\n        createPost(description: $description, title: $title, types: $types) {\n            id\n            description,\n            title,\n            types\n        }\n    }\n`;\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            editor: false,\n            editorContent: null,\n            toolBarOptions: {\n                toolbar: [\n                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                    [{ size: [] }],\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' },\n                    { 'indent': '-1' }, { 'indent': '+1' }],\n                    ['link', 'image', 'video'],\n                    ['clean']\n                ]\n            },\n            description: null,\n            title: null,\n            types: 'THINKING',\n            typeOptions: [{\n                id: 'THINKING',\n                name: 'Thinking'\n            }, {\n                id: 'BUSINESS',\n                name: 'Business'\n            }, {\n                id: 'SCIENCE',\n                name: 'Science'\n            }, {\n                id: 'INVESTING',\n                name: 'Investing'\n            }],\n            formSubmitted: false\n        }\n    }\n\n    componentDidMount() {\n        ReactQuill = require('react-quill');\n\n        if (ReactQuill) {\n            this.setState({ editor: true })\n        }\n    }\n\n    _handleEditorChange = (value) => {\n        this.setState({ description: value })\n    }\n\n    _saveToState = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    _handleError = (error) => {\n        this.setState({ formProcessing: false })\n        return (<Error error={error} />);\n    }\n\n    render() {\n        const { toolBarOptions, editor, description, title, typeOptions, types, formSubmitted, formProcessing } = this.state\n\n        return (\n            <div>\n                <Mutation\n                    mutation={CREATE_POST_MUTATION}\n                    variables={{ description, title, types }}\n                >\n                    {(createPost, { loading, data, error }) => (\n                        <Form name=\"editorForm\" method=\"post\" onSubmit={async e => {\n                            e.preventDefault();\n                            this.setState({ formSubmitted: true, formProcessing: true })\n\n                            const res = await createPost();\n                            toast.success('Post created!')\n\n                            const path = res.data.createPost.types[0].toLowerCase();\n                            Router.push({ pathname: `/${path}` });\n                        }}\n                        >\n                            {formProcessing && error && this._handleError(error)}\n                            {loading && <Loader />}\n                            <Row className=\"no-gutter\">\n                                <Col sm={3}>\n                                    <CompCard>\n                                        <CardHeader>Options</CardHeader>\n                                        <ListGroup>\n                                            <ListGroupItem>Creativity</ListGroupItem>\n                                            <ListGroupItem>System Thinking</ListGroupItem>\n                                            <ListGroupItem>Mental Modes</ListGroupItem>\n                                            <ListGroupItem>Complexity</ListGroupItem>\n                                        </ListGroup>\n                                    </CompCard>\n\n                                </Col>\n                                <Col sm={9}>\n                                    <CompCard className=\"editor\">\n                                        <CardHeader>Think</CardHeader>\n                                        <CardBody>\n                                            <Row>\n                                                <Col sm={6}>\n                                                    <FormGroup>\n                                                        <Label>Title</Label>\n                                                        <Input\n                                                            invalid={formSubmitted && !title}\n                                                            type=\"text\"\n                                                            name=\"title\"\n                                                            placeholder=\"Enter title...\"\n                                                            onChange={this._saveToState}\n                                                        >\n                                                        </Input>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm={6}>\n                                                    <FormGroup>\n                                                        <Label>Article Type</Label>\n                                                        <select className=\"form-control\" name=\"types\" onChange={this._saveToState}>\n                                                            {typeOptions.map((type, i) => (\n                                                                <option key={i} value={type.id}>{type.name}</option>\n                                                            ))}\n                                                        </select>\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            {editor && (\n                                                <>\n                                                <Label>Description</Label>\n                                                <ReactQuill\n                                                    className={formSubmitted && !description ? \"is-invalid\" : ''}\n                                                    theme=\"snow\"\n                                                    onChange={this._handleEditorChange}\n                                                    modules={toolBarOptions}\n                                                />\n                                                </>\n                                            )}\n                                            <div className=\"d-flex justify-content-end mt-3\">\n                                                <Button type=\"submit\" color=\"primary\">\n                                                    <FontAwesomeIcon color=\"white\" icon=\"cog\"></FontAwesomeIcon>Submit</Button>\n                                            </div>\n                                        </CardBody>\n                                    </CompCard>\n                                </Col>\n                            </Row>\n                        </Form>\n                    )}\n                </Mutation>\n            </div>\n        );\n    }\n}\n\nexport default CreatePost;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAUA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8CA;AAAA;AAAA;AACA;AACA;AAhDA;AAkDA;AACA;AACA;AApDA;AAsDA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAtDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AA9BA;AAHA;AAmCA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAetEA;AAiFA;;;;AArJA;AACA;AAuJA;;;;A","sourceRoot":""}