{"version":3,"file":"static/development/pages/post.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/CreatePost.js","webpack:///./components/ErrorMessage.js","webpack:///./components/Loader.js","webpack:///./components/SinglePost.js","webpack:///./components/User.js","webpack:///./components/common/card/Card.js","webpack:///./pages/post.js","webpack:///external \"@babel/runtime/regenerator\"","webpack:///external \"@fortawesome/react-fontawesome\"","webpack:///external \"graphql-tag\"","webpack:///external \"next/router\"","webpack:///external \"prop-types\"","webpack:///external \"react\"","webpack:///external \"react-apollo\"","webpack:///external \"react-loading\"","webpack:///external \"react-quill\"","webpack:///external \"react-toastify\"","webpack:///external \"reactstrap\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { Badge, Button, CardBody, CardFooter, CardHeader, Col, Form, FormFeedback, FormGroup, Input, Label, Row, ListGroup, ListGroupItem } from \"reactstrap\";\nimport CompCard from '../components/common/card/Card';\nimport Loader from './Loader';\nimport Router from 'next/router';\nimport CURRENT_USER_QUERY from './User';\nimport { toast } from 'react-toastify';\nimport Error from './ErrorMessage'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nlet ReactQuill = null\n\nconst CREATE_POST_MUTATION = gql`\n    mutation CREATE_POST_MUTATION($description: String!, $title: String!, $types: String!) {\n        createPost(description: $description, title: $title, types: $types) {\n            id\n            description,\n            title,\n            types\n        }\n    }\n`;\n\nclass CreatePost extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            editor: false,\n            editorContent: null,\n            toolBarOptions: {\n                toolbar: [\n                    [{ 'header': '1' }, { 'header': '2' }, { 'font': [] }],\n                    [{ size: [] }],\n                    ['bold', 'italic', 'underline', 'strike', 'blockquote'],\n                    [{ 'list': 'ordered' }, { 'list': 'bullet' },\n                    { 'indent': '-1' }, { 'indent': '+1' }],\n                    ['link', 'image', 'video'],\n                    ['clean']\n                ]\n            },\n            description: null,\n            title: null,\n            types: 'THINKING',\n            typeOptions: [{\n                id: 'THINKING',\n                name: 'Thinking'\n            }, {\n                id: 'BUSINESS',\n                name: 'Business'\n            }, {\n                id: 'SCIENCE',\n                name: 'Science'\n            }, {\n                id: 'INVESTING',\n                name: 'Investing'\n            }],\n            formSubmitted: false\n        }\n    }\n\n    componentDidMount() {\n        ReactQuill = require('react-quill');\n\n        if (ReactQuill) {\n            this.setState({ editor: true })\n        }\n    }\n\n    _handleEditorChange = (value) => {\n        this.setState({ description: value })\n    }\n\n    _saveToState = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    _handleError = (error) => {\n        this.setState({ formProcessing: false })\n        return (<Error error={error} />);\n    }\n\n    render() {\n        const { toolBarOptions, editor, description, title, typeOptions, types, formSubmitted, formProcessing } = this.state\n\n        return (\n            <div>\n                <Mutation\n                    mutation={CREATE_POST_MUTATION}\n                    variables={{ description, title, types }}\n                >\n                    {(createPost, { loading, data, error }) => (\n                        <Form name=\"editorForm\" method=\"post\" onSubmit={async e => {\n                            e.preventDefault();\n                            this.setState({ formSubmitted: true, formProcessing: true })\n\n                            const res = await createPost();\n                            toast.success('Post created!')\n\n                            const path = res.data.createPost.types[0].toLowerCase();\n                            Router.push({ pathname: `/${path}` });\n                        }}\n                        >\n                            {formProcessing && error && this._handleError(error)}\n                            {loading && <Loader />}\n                            <Row className=\"no-gutter\">\n                                <Col sm={3}>\n                                    <CompCard>\n                                        <CardHeader>Options</CardHeader>\n                                        <ListGroup>\n                                            <ListGroupItem>Creativity</ListGroupItem>\n                                            <ListGroupItem>System Thinking</ListGroupItem>\n                                            <ListGroupItem>Mental Modes</ListGroupItem>\n                                            <ListGroupItem>Complexity</ListGroupItem>\n                                        </ListGroup>\n                                    </CompCard>\n\n                                </Col>\n                                <Col sm={9}>\n                                    <CompCard className=\"editor\">\n                                        <CardHeader>Think</CardHeader>\n                                        <CardBody>\n                                            <Row>\n                                                <Col sm={6}>\n                                                    <FormGroup>\n                                                        <Label>Title</Label>\n                                                        <Input\n                                                            invalid={formSubmitted && !title}\n                                                            type=\"text\"\n                                                            name=\"title\"\n                                                            placeholder=\"Enter title...\"\n                                                            onChange={this._saveToState}\n                                                        >\n                                                        </Input>\n                                                    </FormGroup>\n                                                </Col>\n                                                <Col sm={6}>\n                                                    <FormGroup>\n                                                        <Label>Article Type</Label>\n                                                        <select className=\"form-control\" name=\"types\" onChange={this._saveToState}>\n                                                            {typeOptions.map((type, i) => (\n                                                                <option key={i} value={type.id}>{type.name}</option>\n                                                            ))}\n                                                        </select>\n                                                    </FormGroup>\n                                                </Col>\n                                            </Row>\n\n                                            {editor && (\n                                                <>\n                                                <Label>Description</Label>\n                                                <ReactQuill\n                                                    className={formSubmitted && !description ? \"is-invalid\" : ''}\n                                                    theme=\"snow\"\n                                                    onChange={this._handleEditorChange}\n                                                    modules={toolBarOptions}\n                                                />\n                                                </>\n                                            )}\n                                            <div className=\"d-flex justify-content-end mt-3\">\n                                                <Button type=\"submit\" color=\"primary\">\n                                                    {loading && formSubmitted && \n                                                    (<FontAwesomeIcon spin color=\"white\" icon=\"cog\"></FontAwesomeIcon> )} Submit\n                                                </Button>\n                                            </div>\n                                        </CardBody>\n                                    </CompCard>\n                                </Col>\n                            </Row>\n                        </Form>\n                    )}\n                </Mutation>\n            </div>\n        );\n    }\n}\n\nexport default CreatePost;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\n\nconst DisplayError = ({ error }) => {\n  if (!error || !error.message) return null;\n  if (error.networkError && error.networkError.result && error.networkError.result.errors.length) {\n    toast.error('Please check the form for errors.');\n  }\n  return (\n    <></>\n  );\n};\n\nDisplayError.defaultProps = {\n  error: {},\n};\n\nDisplayError.propTypes = {\n  error: PropTypes.object,\n};\n\nexport default DisplayError;\n","import React from 'react';\nimport ReactLoading from \"react-loading\";\n\nconst Loader = () => {\n    return (\n        <div className=\"loader__backdrop\">\n            <ReactLoading className=\"loader\" type=\"spin\" color=\"rgb(77, 214, 148)\" />\n        </div>\n    );\n};\n\nexport default Loader;","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from \"react-apollo\";\nimport { Badge, Button, CardBody, CardFooter, CardHeader, Col, Form, Label, Row, ListGroup, ListGroupItem } from \"reactstrap\";\nimport CompCard from '../components/common/card/Card';\n\nconst SINGLE_POST_QUERY = gql`\n  query SINGLE_POST_QUERY($id: ID!) {\n    post(where: {id: $id}) {\n      id\n      description\n      title\n      types\n      postedBy { \n          id\n          name\n          email\n      }\n    }\n  }\n`;\n\nclass SinglePost extends Component {\n    render() {\n        const { postId } = this.props\n        return (\n            <div>\n                <Query query={SINGLE_POST_QUERY} variables={{ id: postId }} >\n                    {({data, error, loading}) => (\n                    <CompCard>\n                        <CardHeader>{data.post.title.toUpperCase()}</CardHeader>\n                        <CardBody>\n                            <div dangerouslySetInnerHTML={{ __html: `${data.post.description}` }}/>\n                        </CardBody>\n                    </CompCard> \n                )}\n                </Query>\n            </div>\n        );\n    }\n}\n\nexport default SinglePost;","import React, { Component } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\n\nconst CURRENT_USER_QUERY = gql`\n    query {\n        me {\n            id\n            name\n            email\n            permissions\n        }\n    }\n`;          \n\n\nconst User = (props) => (\n    <Query {...props} fetchPolicy=\"network-only\" query={CURRENT_USER_QUERY} >\n        {payload => {return props.children(payload)}}\n    </Query>\n);\n\nexport default User;\nexport { CURRENT_USER_QUERY };","import React from \"react\";\nimport { Card } from \"reactstrap\";\nimport \"./card.scss\";\n\nconst CompCard = props => {\n  let { className } = props;\n  if (\"undefined\" === typeof className) {\n    className = \"\";\n  }\n  return (\n    <div className=\"comp-card-wrapper\">\n      <Card {...props} className={`comp-card ${className}`}>\n        {props.children}\n      </Card>\n    </div>\n  );\n};\n\nexport default CompCard;\n","import React from 'react';\nimport CreatePost from \"../components/CreatePost\";\nimport SinglePost from \"../components/SinglePost\";\n\nconst post = (props) => {\n    console.log(\"props\", props.query)\n    return (\n        <div>\n            {!props.query.id && <CreatePost />} \n            {props.query.id && <SinglePost postId={props.query.id} />}\n        </div>\n    );\n};\n\nexport default post;\n","module.exports = require(\"@babel/runtime/regenerator\");","module.exports = require(\"@fortawesome/react-fontawesome\");","module.exports = require(\"graphql-tag\");","module.exports = require(\"next/router\");","module.exports = require(\"prop-types\");","module.exports = require(\"react\");","module.exports = require(\"react-apollo\");","module.exports = require(\"react-loading\");","module.exports = require(\"react-quill\");","module.exports = require(\"react-toastify\");","module.exports = require(\"reactstrap\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAUA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AA8CA;AAAA;AAAA;AACA;AACA;AAhDA;AAkDA;AACA;AACA;AApDA;AAsDA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAtDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AANA;AAWA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AACA;AAFA;AAIA;AA9BA;AAHA;AAmCA;AACA;;;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;AAevEA;AAmFA;;;;AAvJA;AACA;AAyJA;;;;;;;;;;;;ACnLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AADA;AAIA;AACA;AADA;AAIA;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA;AAEA;AACA;AAeA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAWA;;;;AAjBA;AACA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1CA;AACA;AACA;AAEA;AACA;AAWA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAFA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACdA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}